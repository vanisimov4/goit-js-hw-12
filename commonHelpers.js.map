{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport default async function getPhotosByText(query, currentPage) {\n  const BASE_URL = 'https://pixabay.com';\n  const END_POINT = '/api/';\n  const url = BASE_URL + END_POINT;\n\n  const params = {\n    key: '42434197-39cd5bed035ab257afa598fe1',\n    q: encodeURIComponent(query),\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 15,\n    page: currentPage,\n  };\n\n  const response = await axios.get(url, { params });\n  return response.data;\n}\n","function templatePhoto(photo) {\n  const {\n    largeImageURL,\n    webformatURL,\n    tags,\n    likes,\n    views,\n    comments,\n    downloads,\n  } = photo;\n\n  return `<li class='gallery-item'>\n  <a class='gallery-link' href='${largeImageURL}'>\n    <img\n      class='gallery-image'\n      src='${webformatURL}'\n      alt='${tags}'\n    />\n  </a>\n    <ul class=\"gallery-item-info\">\n    <li class='gallery-item-info-categories'> \n            <div class='gallery-item-info-likes'>\n                    <h3 class=\"gallery-item-info-title\">Likes</h3>\n                <p class=\"gallery-item-info-text\">${likes}</p>\n                </div>\n    </li>\n    <li class='gallery-item-info-categories'> \n            <div class='gallery-item-info-views'>\n                    <h3 class=\"gallery-item-info-title\">Views</h3>\n                <p class=\"gallery-item-info-text\">${views}</p>\n                  </div>\n    </li>\n    <li class='gallery-item-info-categories'> \n            <div class='gallery-item-info-comments'>\n                    <h3 class=\"gallery-item-info-title\">Comments</h3>\n                <p class=\"gallery-item-info-text\">${comments}</p>\n                 </div>\n    </li>\n    <li class='gallery-item-info-categories'> \n            <div class='gallery-item-info-downloads'>\n                    <h3 class=\"gallery-item-info-title\">Downloads</h3>\n                <p class=\"gallery-item-info-text\">${downloads}</p>\n                 </div>\n    </li>\n    </ul>  \n</li>`;\n}\n\nexport default function templatePhotos(photos) {\n  return photos.map(templatePhoto).join('');\n}\n","import getPhotosByText from './js/pixabay-api';\nimport templatePhotos from './js/render-functions';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  loader: document.querySelector('.loader'),\n  listImages: document.querySelector('ul.gallery'),\n  btnLoadMore: document.querySelector('.btn-load-more'),\n};\n\nlet page;\nlet query;\n\nrefs.form.addEventListener('submit', handleFormSubmit);\nrefs.btnLoadMore.addEventListener('click', handleLoadMoreClick)\n\n\nasync function handleFormSubmit(event) {\n  event.preventDefault();\n  query = refs.form.elements.text.value.trim();\n\n  if (!query) {\n    alert('Empty');\n    return;\n  }\n  page = 1;\n\n  refs.loader.classList.remove('hidden');\n\n  const data = await getPhotosByText(query, page);\n\n      // if (data.hits.length === 0) {\n      //   iziToast.error({\n      //     messageColor: 'white',\n      //     color: '#EF4040',\n      //     position: 'topRight',\n      //     message:\n      //       'Sorry, there are no images matching your search query. Please try again!',\n      //   });\n  // }\n  \n    refs.listImages.innerHTML = '';\n      renderPhotos(data.hits);\n      refs.loader.classList.add('hidden');\n      refs.btnLoadMore.classList.remove('hidden');\n      lightbox.refresh();\n\n    // .catch(error => {\n    //   console.error(error);\n\n  refs.form.reset();\n}\n\nasync function handleLoadMoreClick() {\n  page += 1;\n  const data = await getPhotosByText(query, page);\n       renderPhotos(data.hits);\n}\n\nfunction renderPhotos(objPhotos) {\n  const markup = templatePhotos(objPhotos);\n  refs.listImages.insertAdjacentHTML('beforeend', markup);\n}\n\n\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n"],"names":["getPhotosByText","query","currentPage","url","params","axios","templatePhoto","photo","largeImageURL","webformatURL","tags","likes","views","comments","downloads","templatePhotos","photos","refs","page","handleFormSubmit","handleLoadMoreClick","event","data","renderPhotos","lightbox","objPhotos","markup","SimpleLightbox"],"mappings":"6vBAEe,eAAeA,EAAgBC,EAAOC,EAAa,CAGhE,MAAMC,EAFW,sBACC,QAGZC,EAAS,CACb,IAAK,qCACL,EAAG,mBAAmBH,CAAK,EAC3B,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,GACV,KAAMC,CACV,EAGE,OADiB,MAAMG,EAAM,IAAIF,EAAK,CAAE,OAAAC,CAAM,CAAE,GAChC,IAClB,CCnBA,SAASE,EAAcC,EAAO,CAC5B,KAAM,CACJ,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,EAAGP,EAEJ,MAAO;AAAA,kCACyBC,CAAa;AAAA;AAAA;AAAA,aAGlCC,CAAY;AAAA,aACZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAOmCC,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAMLC,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAMLC,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAMRC,CAAS;AAAA;AAAA;AAAA;AAAA,MAK7D,CAEe,SAASC,EAAeC,EAAQ,CAC7C,OAAOA,EAAO,IAAIV,CAAa,EAAE,KAAK,EAAE,CAC1C,CC1CA,MAAMW,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,OAAQ,SAAS,cAAc,SAAS,EACxC,WAAY,SAAS,cAAc,YAAY,EAC/C,YAAa,SAAS,cAAc,gBAAgB,CACtD,EAEA,IAAIC,EACAjB,EAEJgB,EAAK,KAAK,iBAAiB,SAAUE,CAAgB,EACrDF,EAAK,YAAY,iBAAiB,QAASG,CAAmB,EAG9D,eAAeD,EAAiBE,EAAO,CAIrC,GAHAA,EAAM,eAAc,EACpBpB,EAAQgB,EAAK,KAAK,SAAS,KAAK,MAAM,OAElC,CAAChB,EAAO,CACV,MAAM,OAAO,EACb,MACD,CACDiB,EAAO,EAEPD,EAAK,OAAO,UAAU,OAAO,QAAQ,EAErC,MAAMK,EAAO,MAAMtB,EAAgBC,EAAOiB,CAAI,EAY5CD,EAAK,WAAW,UAAY,GAC1BM,EAAaD,EAAK,IAAI,EACtBL,EAAK,OAAO,UAAU,IAAI,QAAQ,EAClCA,EAAK,YAAY,UAAU,OAAO,QAAQ,EAC1CO,EAAS,QAAO,EAKpBP,EAAK,KAAK,OACZ,CAEA,eAAeG,GAAsB,CACnCF,GAAQ,EACR,MAAMI,EAAO,MAAMtB,EAAgBC,EAAOiB,CAAI,EACzCK,EAAaD,EAAK,IAAI,CAC7B,CAEA,SAASC,EAAaE,EAAW,CAC/B,MAAMC,EAASX,EAAeU,CAAS,EACvCR,EAAK,WAAW,mBAAmB,YAAaS,CAAM,CACxD,CAIA,MAAMF,EAAW,IAAIG,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC"}